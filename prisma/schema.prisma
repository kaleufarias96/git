// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id          Int            @id @default(autoincrement())
  nome        String?        @db.VarChar(60)
  email       String         @unique
  telefone    String         @db.VarChar(20)
  senha       String
  dataCriacao DateTime       @default(now())
  status      status         @default(ATIVO)
  agendamento Agendamento[]  
  @@map("usuarios")
}

enum status {
  ATIVO
  INATIVO
}

model Agendamento {
  id             Int       @id @default(autoincrement())
  data           DateTime
  hora           String
  usurio        Usuario   @relation(fields: [usuario_id], references: [id])
  usuario_id     Int
  quadra        Quadra    @relation(fields: [quadra_id], references: [id])
  quadra_id      Int
  @@map("agendamento")
}

model Esporte {
  id          Int               @id @default(autoincrement())
  nome        String
  quadra     Quadra[]
  @@map("esportes")
}

model Quadra {
  id               Int           @id @default(autoincrement())
  nome             String
  tipoDaQuadra     String
  esporte         Esporte   @relation(fields: [esporte_id], references: [id])
  esporte_id       Int
  agendamento      Agendamento[]
  @@map("quadras")
}

model estabelecimento {
  id               Int            @id @default(autoincrement())
  nome             String
  endereco         String
  telefone         String
  dotaInicioManha  String
  dotaFimManha     String
  dataInicioTarde  String
  dataFimTarde     String
  @@map("estabelecimentos")
}